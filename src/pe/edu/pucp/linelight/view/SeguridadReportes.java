/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package pe.edu.pucp.linelight.view;

import java.net.URL;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRExporter;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.engine.export.JRPdfExporter;
import net.sf.jasperreports.view.JasperViewer;
import pe.edu.pucp.linelight.controller.EjecucionAlgoritmoController;
import pe.edu.pucp.linelight.controller.UsuarioController;
import pe.edu.pucp.linelight.model.Ejecucionalgoritmo;
import pe.edu.pucp.linelight.model.Ejecucionalgoritmoxsemaforo;
import pe.edu.pucp.linelight.reportClasses.Semaforo_aux;
import pe.edu.pucp.linelight.reportClasses.SemaforosReport;
import pe.edu.pucp.linelight.reportClasses.UsuariosReport;

/**
 *
 * @author Charito
 */
public class SeguridadReportes extends javax.swing.JPanel {

    
    JasperPrint jp;
    List<Ejecucionalgoritmo> lEjec;
    /**
     * Creates new form SeguridadReportes
     */
    public SeguridadReportes() {
        initComponents();
        lEjec=EjecucionAlgoritmoController.obtenerConfiguraciónSimulación();
        simulaciones.removeAllItems();
         simulaciones.addItem("--Configuración por defecto--");
        for (Ejecucionalgoritmo e:lEjec)
        {
            simulaciones.addItem(e.getNombreSimulacion());
            
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel5 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        simulaciones = new javax.swing.JComboBox();
        Imprimir = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(800, 647));

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Tiempos de semáforos por optimización"));

        jLabel10.setText("Nombre de la simualción:");

        simulaciones.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        Imprimir.setText("Imprimir");
        Imprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ImprimirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel10)
                .addGap(36, 36, 36)
                .addComponent(simulaciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Imprimir)
                .addContainerGap(403, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(simulaciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Imprimir))
                .addContainerGap(41, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(508, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void ImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ImprimirActionPerformed
        try {
            init_semaforos();

            JRExporter exporter = new JRPdfExporter();
            
            exporter.setParameter(JRExporterParameter.JASPER_PRINT, jp);
            exporter.setParameter(JRExporterParameter.OUTPUT_FILE, new java.io.File("reportePDF.pdf"));
            
            exporter.exportReport();
            
            JasperViewer jviewer= new JasperViewer(jp,false);
            jviewer.setTitle("Reporte");
            jviewer.setVisible(true);
        } catch (JRException ex) {
            Logger.getLogger(SeguridadReportes.class.getName()).log(Level.SEVERE, null, ex);
               }  
    }//GEN-LAST:event_ImprimirActionPerformed

    
    
public void init_semaforos() {
URL in = null;
      try{
          in = this.getClass().getResource("/pe/edu/pucp/linelight/reports/semaforosReport.jasper");
          List<SemaforosReport> lista = new ArrayList<>();
          SemaforosReport raut=new SemaforosReport();
          
          raut.setSimulacion(lEjec.get(simulaciones.getSelectedIndex()-1).getNombreSimulacion());

          
          List<Ejecucionalgoritmoxsemaforo> lista_sem=EjecucionAlgoritmoController.getEjecucionxSemaforoById(lEjec.get(simulaciones.getSelectedIndex()-1).getId().getIdEjecucionAlgoritmo());
          List<Semaforo_aux> semaforos= new ArrayList<>();
          for(int i=0; i< lista_sem.size(); i++){
              Semaforo_aux sem= new Semaforo_aux();
              if(lista_sem.get(i).getSemaforo().getEstado())
                sem.setEstado("activo");
              else
                sem.setEstado("inactivo");
              sem.setId_nodo(String.valueOf(lista_sem.get(i).getId().getIdNodo()));
              sem.setId_semaforo(String.valueOf(lista_sem.get(i).getSemaforo().getId().getIdSemaforo()));
              sem.setT_rojo(lista_sem.get(i).getTrojo().toString());
              sem.setT_verde(lista_sem.get(i).getTverde().toString());
              semaforos.add(sem);
          }
          raut.setSemaforos(semaforos);
         lista.add(raut);
          JRBeanCollectionDataSource beanCollectionDataSource=new JRBeanCollectionDataSource(lista);
          jp=JasperFillManager.fillReport(in.getPath(), new HashMap(),beanCollectionDataSource);    
        } catch(JRException e){
           e.printStackTrace();
      }


}    
    
public void init_usuarios() throws JRException, ParseException{
        URL in = null;
      try{
          in = this.getClass().getResource("/pe/edu/pucp/linelight/reports/usuariosReport.jasper");
          List<UsuariosReport> lista = new ArrayList<>();
          UsuariosReport raut=new UsuariosReport();
          raut.setUsuarios(UsuarioController.getAllUsuarios());
        
         
         lista.add(raut);
          JRBeanCollectionDataSource beanCollectionDataSource=new JRBeanCollectionDataSource(lista);
          jp=JasperFillManager.fillReport(in.getPath(), new HashMap(),beanCollectionDataSource);    
        } catch(JRException e){
           e.printStackTrace();
      }
  }


    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Imprimir;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JComboBox simulaciones;
    // End of variables declaration//GEN-END:variables
}
