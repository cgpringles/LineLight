/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package pe.edu.pucp.linelight.view;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.File;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.dom4j.DocumentException;
import pe.edu.pucp.linelight.controller.DistritoController;
import pe.edu.pucp.linelight.controller.TipoViaController;
import pe.edu.pucp.linelight.controller.semaforoController;
import pe.edu.pucp.linelight.controller.ViaController;
import pe.edu.pucp.linelight.controller.jcThread;
import pe.edu.pucp.linelight.controller.parseSemaforosStructure;
import pe.edu.pucp.linelight.controller.parseViasStructure;
import pe.edu.pucp.linelight.model.Distrito;
import pe.edu.pucp.linelight.model.Nodo;
import pe.edu.pucp.linelight.model.Semaforo;
import pe.edu.pucp.linelight.model.SemaforoId;
import pe.edu.pucp.linelight.model.Tipovia;
import pe.edu.pucp.linelight.model.Via;
import pe.edu.pucp.linelight.structure.MapParser;
import pe.edu.pucp.linelight.util.ValidationUtil;

/**
 *
 * @author USER
 */
public class NuevoSemaforo extends javax.swing.JFrame {

    /**
     * Creates new form nuevoSemáforo
     */
    public NuevoSemaforo() {
        initComponents();
        jProgressBar1.setVisible(false);
        lblprogreso.setVisible(false);
        jButton3.setEnabled(true);
        jButton5.setEnabled(true);
        cmbDistritoMasivo.setEnabled(true);
        
        getContentPane().setBackground(new java.awt.Color(240, 240, 240));
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
        ArrayList<Distrito> distritos = DistritoController.obtenerDistritos();
        for (int i = 0; i < distritos.size(); i++){
            cmbDistrito.addItem(distritos.get(i).getNombre());
        }
        ArrayList<Tipovia> tipos = TipoViaController.obtenerTipos();
        for (int i = 0; i < tipos.size(); i++){
            cmbTipoVia1.addItem(tipos.get(i).getDescripcion());
            cmbTipoVia2.addItem(tipos.get(i).getDescripcion());            
        }
        for (int i = 0; i < distritos.size(); i++){
            cmbDistritoMasivo.addItem(distritos.get(i).getNombre());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        txtFecha = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        cmbDistritoMasivo = new javax.swing.JComboBox();
        jProgressBar1 = new javax.swing.JProgressBar();
        lblprogreso = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cmbDistrito = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cmbTipoVia1 = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        cmbVia1 = new javax.swing.JComboBox();
        cmbTipoVia2 = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        cmbVia2 = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtTiempoRojo = new javax.swing.JTextField();
        txtTiempoVerde = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDescripcion = new javax.swing.JTextPane();
        jLabel15 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Registrar Semáforo");

        jTabbedPane2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel21.setText("Selecciona un archivo:");

        jButton3.setText("Registrar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton5.setText("Cancelar");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel22.setText("Nombre del archivo:");

        jLabel23.setText("Fecha:");

        txtFecha.setEditable(false);

        jLabel25.setForeground(new java.awt.Color(255, 0, 0));
        jLabel25.setText("(*)");

        jLabel26.setForeground(new java.awt.Color(255, 0, 0));
        jLabel26.setText("(*) Datos Obligatorios");

        cmbDistritoMasivo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione" }));
        cmbDistritoMasivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbDistritoMasivoActionPerformed(evt);
            }
        });

        lblprogreso.setText("Registrando semáforos... ");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblprogreso, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel21)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel22)
                                            .addComponent(jLabel23))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtFecha, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                                            .addComponent(cmbDistritoMasivo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel25)))
                                .addGap(6, 6, 6)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                        .addComponent(jLabel26)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel21)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(jLabel25)
                    .addComponent(cmbDistritoMasivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(67, 67, 67)
                .addComponent(lblprogreso)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel26)
                    .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(195, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Registro masivo", jPanel4);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "Datos del Semáforo"));
        jPanel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel1.setText("Distrito:");

        cmbDistrito.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione" }));
        cmbDistrito.setAlignmentX(0.0F);
        cmbDistrito.setAlignmentY(0.0F);
        cmbDistrito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbDistritoActionPerformed(evt);
            }
        });

        jLabel2.setText("Tipo Vía 1:");

        jLabel3.setText("Tipo Vía 2:");

        cmbTipoVia1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione" }));
        cmbTipoVia1.setAlignmentX(0.0F);
        cmbTipoVia1.setAlignmentY(0.0F);
        cmbTipoVia1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbTipoVia1ActionPerformed(evt);
            }
        });

        jLabel4.setText("Vía 1:");

        cmbVia1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione Distrito" }));
        cmbVia1.setAlignmentX(0.0F);
        cmbVia1.setAlignmentY(0.0F);
        cmbVia1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbVia1ActionPerformed(evt);
            }
        });

        cmbTipoVia2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione" }));
        cmbTipoVia2.setAlignmentX(0.0F);
        cmbTipoVia2.setAlignmentY(0.0F);
        cmbTipoVia2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbTipoVia2ActionPerformed(evt);
            }
        });

        jLabel5.setText("Vía 2:");

        cmbVia2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione Distrito" }));
        cmbVia2.setAlignmentX(0.0F);
        cmbVia2.setAlignmentY(0.0F);
        cmbVia2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbVia2ActionPerformed(evt);
            }
        });

        jLabel10.setForeground(new java.awt.Color(255, 0, 0));
        jLabel10.setText("(*)");

        jLabel11.setForeground(new java.awt.Color(255, 0, 0));
        jLabel11.setText("(*)");

        jLabel12.setForeground(new java.awt.Color(255, 0, 0));
        jLabel12.setText("(*)");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(6, 6, 6)
                        .addComponent(cmbTipoVia2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addComponent(cmbVia2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel12))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(4, 4, 4)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cmbDistrito, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbTipoVia1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmbVia1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel11))
                            .addComponent(jLabel10))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cmbDistrito, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cmbTipoVia1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(cmbVia1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cmbTipoVia2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(cmbVia2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addGap(0, 68, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "Datos extras"));
        jPanel2.setForeground(new java.awt.Color(51, 51, 51));
        jPanel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel6.setText("Tiempo en Rojo:");

        jLabel7.setText("Tiempo en Verde:");

        txtTiempoRojo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTiempoRojoKeyTyped(evt);
            }
        });

        txtTiempoVerde.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTiempoVerdeKeyTyped(evt);
            }
        });

        jLabel8.setText("segundos");

        jLabel9.setText("segundos");

        jLabel13.setForeground(new java.awt.Color(255, 0, 0));
        jLabel13.setText("(*)");

        jLabel14.setForeground(new java.awt.Color(255, 0, 0));
        jLabel14.setText("(*)");

        jLabel16.setText("Descripción:");

        jScrollPane1.setViewportView(txtDescripcion);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel7)
                            .addGap(18, 18, 18))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel6)
                            .addGap(24, 24, 24)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addGap(44, 44, 44)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtTiempoRojo, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE)
                            .addComponent(txtTiempoVerde))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel13))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel14))))
                    .addComponent(jScrollPane1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtTiempoRojo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel13))
                .addGap(6, 6, 6)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtTiempoVerde, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel15.setForeground(new java.awt.Color(255, 0, 0));
        jLabel15.setText("(*) Datos Obligatorios");

        jButton1.setText("Registrar");
        jButton1.setBorderPainted(false);
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Cancelar");
        jButton2.setToolTipText("");
        jButton2.setBorderPainted(false);
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel15)
                                .addGap(31, 31, 31))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jTabbedPane2.addTab("Registro manual", null, jPanel3, "");

        jTabbedPane2.setSelectedIndex(1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 15, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int seleccion = JOptionPane.showOptionDialog(
                    NuevoSemaforo.this, // Componente padre
                    "¿Esta seguro que desea registrar el semaforo?", //Mensaje
                    "Mensaje de confirmación", // Título
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.QUESTION_MESSAGE,
                    null,    // null para icono por defecto.
                    new Object[] { "Si", "No"},    // null para YES, NO y CANCEL
                    "Si");
                    if (seleccion != 1){
                        if (seleccion == 1){
                            
                        }else{
                      //Agregar Semaforo      
                      Via via1 = (Via)cmbVia1.getSelectedItem();
                      Via via2 = (Via) cmbVia2.getSelectedItem();
                      String distrito = (String) cmbDistrito.getSelectedItem();
                      int numvia1 = cmbVia1.getSelectedIndex();
                      int numvia2 = cmbVia2.getSelectedIndex();
                      int numDistrito = cmbDistrito.getSelectedIndex();
                      String tiempoVerde = txtTiempoVerde.getText();
                      String tiempoRojo = txtTiempoRojo.getText();
                      if (numvia1 == 0 || numvia2 == 0 || numDistrito == 0 || tiempoVerde.isEmpty() || tiempoRojo.isEmpty()){
                                    seleccion = JOptionPane.showOptionDialog(
                                    NuevoSemaforo.this, 
                                    "Complete los campos obligatorios", 
                                    "Mensaje de error",
                                    JOptionPane.OK_OPTION,
                                    JOptionPane.OK_OPTION,
                                    null,
                                    new Object[] { "Aceptar"},    
                                    "Aceptar");
                      }else{
                      
                            long nodoId = semaforoController.obtenerIdNodo(via1, via2);
                            boolean existeSemaforo = semaforoController.verificarSemaforo(nodoId);
                            
                            //depende lo que devuelve verificamos o no si existe interseccion....
                            if (nodoId == 0  || existeSemaforo == true){
                                String mensaje = "";
                                if (nodoId == 0)
                                    mensaje = "Los datos brindados de vías no coinciden con una intersección";
                                else
                                    mensaje = "Ya existe un semaforo en la ubicación señalada";
                                    seleccion = JOptionPane.showOptionDialog(
                                    NuevoSemaforo.this, mensaje,
                                    "Mensaje de error",
                                    JOptionPane.OK_OPTION,
                                    JOptionPane.OK_OPTION,
                                    null,
                                    new Object[] { "Aceptar"},    
                                    "Aceptar");
                            }else{
                                  Semaforo nuevoSemaforo = new Semaforo();
                                  Semaforo nuevoSemaforo1 = new Semaforo();                      
                                  nuevoSemaforo.setEstado(true);
                                  nuevoSemaforo1.setEstado(true);
                                  nuevoSemaforo1.setTrojo( Integer.parseInt(txtTiempoVerde.getText()) );
                                  nuevoSemaforo1.setTverde( Integer.parseInt(txtTiempoRojo.getText()) );
                                  nuevoSemaforo1.setDescripcion(txtDescripcion.getText());
                                  nuevoSemaforo.setTrojo( Integer.parseInt(txtTiempoRojo.getText()) );
                                  nuevoSemaforo.setTverde( Integer.parseInt(txtTiempoVerde.getText()) );
                                  nuevoSemaforo.setDescripcion(txtDescripcion.getText());
                                  nuevoSemaforo.setVia1(via1.getNombre());
                                  nuevoSemaforo.setVia2(via2.getNombre());
                                  nuevoSemaforo.setTipo(0);
                                  nuevoSemaforo.setDistrito(distrito);                     
                                  nuevoSemaforo1.setVia1(via2.getNombre());
                                  nuevoSemaforo1.setVia2(via1.getNombre());
                                  nuevoSemaforo1.setDistrito(distrito);
                                  nuevoSemaforo1.setTipo(1);
                                  String idSem1 = Long.toString(nodoId).substring(3) + "1";
                                  String idSem2 = Long.toString(nodoId).substring(3) + "2";
                                  
                                  //El id del semaforo
                                  SemaforoId idSemaforo = new SemaforoId();
                                  idSemaforo.setIdSemaforo(Integer.parseInt(idSem1));
                                  idSemaforo.setIdNodo(nodoId);
                                  nuevoSemaforo.setId(idSemaforo);

                                  SemaforoId idSemaforo1 = new SemaforoId();
                                  idSemaforo1.setIdSemaforo(Integer.parseInt(idSem2));
                                  idSemaforo1.setIdNodo(nodoId);
                                  nuevoSemaforo1.setId(idSemaforo1);


                                  Nodo nodo = semaforoController.buscarNodo(nodoId);
                                  nuevoSemaforo.setNodo(nodo);
                                  nuevoSemaforo1.setNodo(nodo);
                                  semaforoController.registrarSemaforo(nuevoSemaforo1);
                                  semaforoController.registrarSemaforo(nuevoSemaforo);
                                  seleccion = JOptionPane.showOptionDialog(
                                    NuevoSemaforo.this, 
                                    "Se ha agregado correctamente el semáforo", 
                                    "Acción",
                                    JOptionPane.OK_OPTION,
                                    JOptionPane.OK_OPTION,
                                    null,
                                    new Object[] { "Ok"},    
                                    "Ok");
                                  NuevoSemaforo.this.dispose();
                                  }
                            }
                    }
    }//GEN-LAST:event_jButton1ActionPerformed
    }
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
           int seleccion = JOptionPane.showOptionDialog(
                    NuevoSemaforo.this, // Componente padre
                    "¿Esta seguro que desea salir sin regitrar el semafo?", //Mensaje
                    "Mensaje de confirmación", // Título
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.QUESTION_MESSAGE,
                    null,    // null para icono por defecto.
                    new Object[] { "Si", "No"},    // null para YES, NO y CANCEL
                    "Si");
                
                if (seleccion != -1)
                {
                   if(seleccion == 0)
                   {
                      NuevoSemaforo.this.dispose();
                   }
                   else
                   {
                      
                   }
                }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
         //Mensaje de confirmación
        int seleccion = 0;
//                JOptionPane.showOptionDialog(
//                    NuevoSemaforo.this, // Componente padre
//                    "¿Esta seguro que desea guardar los cambios?", //Mensaje
//                    "Mensaje de confirmación", // Título
//                    JOptionPane.YES_NO_OPTION,
//                    JOptionPane.QUESTION_MESSAGE,
//                    null,    // null para icono por defecto.
//                    new Object[] { "Si", "No"},    // null para YES, NO y CANCEL
//                    "Si");
        //Dependiendo de la seleccion
        if (seleccion != -1)//si ha seleccionado alguna opcion
                {
                   if(seleccion == 1)//si ha seleccionado no
                   {
                      NuevoSemaforo.this.dispose();
                   }
                   else //si ha seleccionado si
                   {
                       if (cmbDistritoMasivo.getSelectedIndex() == 0){
                           seleccion = JOptionPane.showOptionDialog(
                                    NuevoSemaforo.this, 
                                    "Complete los campos obligatorios", 
                                    "Mensaje de error",
                                    JOptionPane.OK_OPTION,
                                    JOptionPane.OK_OPTION,
                                    null,
                                    new Object[] { "Aceptar"},    
                                    "Aceptar");
                       }else{
                           boolean semaforosCargados = false;
                           semaforosCargados = semaforoController.verificarSemaforoDistrito((String)cmbDistritoMasivo.getSelectedItem());
                       //
                       if (semaforosCargados == true)
                            seleccion = JOptionPane.showOptionDialog(
                            NuevoSemaforo.this, // Componente padre
                            "El distrito ya cuenta con semaforos registros. ¿Desea sobreescribir la información?", //Mensaje
                            "Mensaje de confirmación", // Título
                            JOptionPane.YES_NO_OPTION,
                            JOptionPane.QUESTION_MESSAGE,
                            null,    // null para icono por defecto.
                            new Object[] { "Si", "No"},    // null para YES, NO y CANCEL
                            "Si");
                              if (seleccion == 0 || semaforosCargados == false){
                                  if (semaforosCargados == true)
                                        semaforoController.eliminarSemaforos((String)cmbDistritoMasivo.getSelectedItem());
                                  int numSemCargados = 0;
                                    JFileChooser fc = new JFileChooser();
                                     FileNameExtensionFilter filter = new FileNameExtensionFilter("XML","xml");
                                     fc.setFileFilter(filter);
                                     int returnVal = fc.showOpenDialog(this);
                                         if (returnVal == JFileChooser.APPROVE_OPTION) {
                                             File sourceFile = fc.getSelectedFile();
                                             Distrito d=DistritoController.obtenerDistrito((String)cmbDistritoMasivo.getSelectedItem());

                                             try {
                                                 jProgressBar1.setVisible(true);
                                                 lblprogreso.setVisible(true);
                                                 jButton3.setEnabled(false);
                                                 jButton5.setEnabled(false);
                                                 cmbDistritoMasivo.setEnabled(false);
                                                 new Thread(new jcThread(this.jProgressBar1 , 50) ).start();
                                                 new Thread(new parseSemaforosStructure(sourceFile,d,this)).start();
                                                 
                                                 //numSemCargados = semaforoController.parseSemaforos(sourceFile, d);
                                             } catch (DocumentException ex) {
                                                 Logger.getLogger(WindowPrincipal.class.getName()).log(Level.SEVERE, null, ex);
                                             }

                                         } 
                                         else {
                                             System.out.print("Open command cancelled by user.");
                                         }
                                             //tengo que pasarle el distrito o el id y contar cuantas filas he cargado
                                    //SemaforosCargados semCar = new SemaforosCargados(numSemCargados);                          
                                    //semCar.setVisible(true);
//                                    this.dispose();
                              }
                           }
                                    
                           }

                       }
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
            int seleccion = JOptionPane.showOptionDialog(
                    NuevoSemaforo.this, // Componente padre
                    "¿Esta seguro que desea salir sin guardar?", //Mensaje
                    "Mensaje de confirmación", // Título
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.QUESTION_MESSAGE,
                    null,    // null para icono por defecto.
                    new Object[] { "Si", "No"},    // null para YES, NO y CANCEL
                    "Si");
                
                if (seleccion != -1)
                {
                   if(seleccion == 0)
                   {
                      NuevoSemaforo.this.dispose();
                   }
                   else
                   {
                      
                   }
                }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void cmbTipoVia2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbTipoVia2ActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        cmbVia2.removeAllItems();
        cmbVia2.addItem("Seleccione Vía");
        if (cmbTipoVia2.getSelectedIndex() == 0){
            ArrayList<Via> viasDistrinto = ViaController.obtenerVias(DistritoController.obteneridDistrito((String)cmbDistrito.getSelectedItem()));
            for (int i = 0; i < viasDistrinto.size(); i++){
                cmbVia2.addItem(viasDistrinto.get(i));
            }
        }if (cmbTipoVia2.getSelectedIndex() != 0 && cmbDistrito.getSelectedIndex() != 0){
            //Cargo las vias con el distrito seleccionado y el tipo de via
            int idDistrito = DistritoController.obteneridDistrito((String)cmbDistrito.getSelectedItem());
            int idTipoVia = TipoViaController.obteneridTipo((String)cmbTipoVia2.getSelectedItem());
            ArrayList<Via> vias =  ViaController.obtenerViasxIdxDistrito(idTipoVia, idDistrito);
            for (int i = 0; i < vias.size(); i++){
                cmbVia2.addItem(vias.get(i));
            }
        }
    }//GEN-LAST:event_cmbTipoVia2ActionPerformed

    private void cmbTipoVia1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbTipoVia1ActionPerformed
        // TODO add your handling code here:
        cmbVia1.removeAllItems();
        cmbVia1.addItem("Seleccione Vía");
            
        if (cmbTipoVia1.getSelectedIndex() == 0){
            ArrayList<Via> viasDistrinto = ViaController.obtenerVias(DistritoController.obteneridDistrito((String)cmbDistrito.getSelectedItem()));
            for (int i = 0; i < viasDistrinto.size(); i++){
                cmbVia1.addItem(viasDistrinto.get(i));
            }
        }if (cmbTipoVia1.getSelectedIndex() != 0 && cmbDistrito.getSelectedIndex() != 0){
            //Cargo las vias con el distrito seleccionado y el tipo de via
            int idDistrito = DistritoController.obteneridDistrito((String)cmbDistrito.getSelectedItem());
            int idTipoVia = TipoViaController.obteneridTipo((String)cmbTipoVia1.getSelectedItem());
            ArrayList<Via> vias =  ViaController.obtenerViasxIdxDistrito(idTipoVia, idDistrito);
            for (int i = 0; i < vias.size(); i++){
                cmbVia1.addItem(vias.get(i));
            }
        }

    }//GEN-LAST:event_cmbTipoVia1ActionPerformed

    private void cmbDistritoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbDistritoActionPerformed
        // TODO add your handling code here:
        cmbVia1.removeAllItems();
        cmbVia2.removeAllItems();

        if (cmbDistrito.getSelectedIndex() == 0){
            cmbVia1.addItem("Seleccione Distrito");
            cmbVia2.addItem("Seleccione Distrito");
            cmbVia1.setSelectedIndex(0);
            cmbVia2.setSelectedIndex(0);
        }
        if (cmbDistrito.getSelectedIndex() != 0 && cmbTipoVia1.getSelectedIndex() == 0 && cmbTipoVia2.getSelectedIndex() == 0){
            cmbVia1.addItem("Seleccione Vía");
            cmbVia2.addItem("Seleccione Vía");
            ArrayList<Via> viasDistrinto = ViaController.obtenerVias(DistritoController.obteneridDistrito((String)cmbDistrito.getSelectedItem()));
            for (int i = 0; i < viasDistrinto.size(); i++){
                cmbVia1.addItem(viasDistrinto.get(i));
                cmbVia2.addItem(viasDistrinto.get(i));
            }
        }
        if (cmbTipoVia1.getSelectedIndex() != 0 && cmbDistrito.getSelectedIndex() != 0 && cmbTipoVia2.getSelectedIndex() == 0){
            cmbVia1.addItem("Seleccione Vía");
            cmbVia2.addItem("Seleccione Vía");
            int idDistrito = DistritoController.obteneridDistrito((String)cmbDistrito.getSelectedItem());
            int idTipoVia = TipoViaController.obteneridTipo((String)cmbTipoVia1.getSelectedItem());
            ArrayList<Via> vias =  ViaController.obtenerViasxIdxDistrito(idTipoVia, idDistrito);
            for (int i = 0; i < vias.size(); i++){
                cmbVia1.addItem(vias.get(i));
            }
            ArrayList<Via> viasDistrinto = ViaController.obtenerVias(DistritoController.obteneridDistrito((String)cmbDistrito.getSelectedItem()));
            for (int i = 0; i < viasDistrinto.size(); i++){
                cmbVia2.addItem(viasDistrinto.get(i));
            }
        }

        if (cmbTipoVia2.getSelectedIndex() != 0 && cmbDistrito.getSelectedIndex() != 0 && cmbTipoVia1.getSelectedIndex() == 0){
            cmbVia1.addItem("Seleccione Vía");
            cmbVia2.addItem("Seleccione Vía");
            int idDistrito = DistritoController.obteneridDistrito((String)cmbDistrito.getSelectedItem());
            int idTipoVia = TipoViaController.obteneridTipo((String)cmbTipoVia2.getSelectedItem());
            ArrayList<Via> vias =  ViaController.obtenerViasxIdxDistrito(idTipoVia, idDistrito);
            for (int i = 0; i < vias.size(); i++){
                cmbVia2.addItem(vias.get(i));
            }
            ArrayList<Via> viasDistrinto = ViaController.obtenerVias(DistritoController.obteneridDistrito((String)cmbDistrito.getSelectedItem()));
            for (int i = 0; i < viasDistrinto.size(); i++){
                cmbVia1.addItem(viasDistrinto.get(i));
            }
        }

        if (cmbTipoVia1.getSelectedIndex() != 0 && cmbDistrito.getSelectedIndex() != 0 && cmbTipoVia2.getSelectedIndex() != 0){
            cmbVia1.addItem("Seleccione Vía");
            cmbVia2.addItem("Seleccione Vía");
            int idDistrito = DistritoController.obteneridDistrito((String)cmbDistrito.getSelectedItem());
            int idTipoVia = TipoViaController.obteneridTipo((String)cmbTipoVia1.getSelectedItem());
            ArrayList<Via> vias =  ViaController.obtenerViasxIdxDistrito(idTipoVia, idDistrito);
            for (int i = 0; i < vias.size(); i++){
                cmbVia1.addItem(vias.get(i));
            }
            idTipoVia = TipoViaController.obteneridTipo((String)cmbTipoVia2.getSelectedItem());
            vias =  ViaController.obtenerViasxIdxDistrito(idTipoVia, idDistrito);
            for (int i = 0; i < vias.size(); i++){
                cmbVia2.addItem(vias.get(i));
            }

        }

    }//GEN-LAST:event_cmbDistritoActionPerformed

    private void cmbVia2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbVia2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbVia2ActionPerformed

    private void cmbVia1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbVia1ActionPerformed
        // TODO add your handling code here:
  
    }//GEN-LAST:event_cmbVia1ActionPerformed

    private void txtTiempoRojoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTiempoRojoKeyTyped
        // TODO add your handling code here:
        ValidationUtil.validateNumTam(txtTiempoRojo.getText(), 3, evt);
    }//GEN-LAST:event_txtTiempoRojoKeyTyped

    private void txtTiempoVerdeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTiempoVerdeKeyTyped
        // TODO add your handling code here:
        ValidationUtil.validateNumTam(txtTiempoVerde.getText(), 3, evt);
    }//GEN-LAST:event_txtTiempoVerdeKeyTyped

    private void cmbDistritoMasivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbDistritoMasivoActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        if (cmbDistritoMasivo.getSelectedIndex() != 0){
        Distrito distrito = DistritoController.obtenerDistrito((String)cmbDistritoMasivo.getSelectedItem());
        SimpleDateFormat sdf=new SimpleDateFormat("dd/MM/yyyy"); 
        txtFecha.setText(sdf.format(distrito.getFecRegistro()));
        }else{
            txtFecha.setText("");
        }
    }//GEN-LAST:event_cmbDistritoMasivoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NuevoSemaforo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NuevoSemaforo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NuevoSemaforo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NuevoSemaforo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NuevoSemaforo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cmbDistrito;
    private javax.swing.JComboBox cmbDistritoMasivo;
    private javax.swing.JComboBox cmbTipoVia1;
    private javax.swing.JComboBox cmbTipoVia2;
    private javax.swing.JComboBox cmbVia1;
    private javax.swing.JComboBox cmbVia2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JLabel lblprogreso;
    private javax.swing.JTextPane txtDescripcion;
    private javax.swing.JTextField txtFecha;
    private javax.swing.JTextField txtTiempoRojo;
    private javax.swing.JTextField txtTiempoVerde;
    // End of variables declaration//GEN-END:variables
}
